-Make sure you have node and npm installed (node -v, npm -v)
-npm init -y for package.json
-npm install express express-react-views
-Create server.js
-require is a function inside of node that brings other files from node-modules ex: const express = require('express')
-Express is mean to be a server for the developer. 
-Use the listen function, in this case app.listen and specify a port such as Port 3000. The function allows the developer to pass a call back to execute when it loads up. 
-At first you get Cannot GET / on the browser
-When users send requests to our server, we need to define how our server responds by create a route
-When users try to get info from your site, they are making a get request. So, the route that you set is the get route. You can set the app.get to the root and then pass a callback with 2 pieces of info 1) request object 2) response object. 
-Here if the response goes to the root, send "Hello World"

app.get('/', (req, res) => {
    response.send(`hello world`);
}) 

-Middleware are actions that you want to happen before it hits the routes

-static routes is when you specify what the route is such as ('/') for root or ('/ironman'). 
-Other type of route is dynamic route and that is when we use params. 
-It is easier to destructure the params

-Express React Views uses React syntax to write server rendered pages
-To set it up: npm install react react-dom
-Copy the middleware code from express-react-views on get hub (https://github.com/reactjs/express-react-views) and paste in server.js
-Create a folder called views where we will have all the JSX files
-In the app.get, it should be res.render where you are telling express to render something. By default it looks in the views folder where the index file will be saved. As a second argument, you are passing it information to send to the browser. So, in this example we are telling it render the index view and pass it the object {ironman: 'Robert Downey Jr'} for its use
 app.get('/', (req, res) => {
    res.render('index', {ironman: 'Robert Downey Jr'});
}) 
